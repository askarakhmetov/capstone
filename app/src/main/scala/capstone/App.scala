/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package capstone

import org.apache.spark.sql.SaveMode
import org.apache.spark.sql.functions.{col, lit, to_date}

import java.io.{File, FileWriter, PrintWriter}



object App {

  import org.apache.spark.sql.SparkSession

  val spark: SparkSession =
    SparkSession
      .builder()
      .appName("Capstone")
      .master("local")
      .getOrCreate()

  def timeToFile[T](f: => T, naming: String): T = {
    val timewriter = new FileWriter("output/times.md", true)
    val start = System.nanoTime()
    val ret = f
    val end = System.nanoTime()
    timewriter.write(naming+" time \n "+((end-start)/ 1000 / 1000).toString+"\n--------------------------- \n")
    timewriter.close()
    ret
  }

  def main(args: Array[String]): Unit = {

    // task 1
    val task1 = new Task1Job(spark)
    val task11out = timeToFile(task1.runT1(), "task11 on csv with writing to parquet")
    val task12out = timeToFile(task1.runT2(), "task12 on csv with writing to parquet")

    // task 2
    val task2 = new Task2Job(spark)
    val task21out = timeToFile(task2.runT1(task11out), "task21 with writing to parquet")
    val task22out = timeToFile(task2.runT2(task11out), "task22 with writing to parquet")
   // val task21altout = timeToFile(task2.runT1alt(task11out), "task21alt with writing to parquet")
    val task22altout = timeToFile(task2.runT2alt(task11out), "task22alt with writing to parquet")

    /** Task #3.1. Convert input dataset to parquet. Think about partitioning.
          Compare performance on top CSV input and parquet input. Save output for Task #1 as parquet as well.*/
    val task3 = new Task3Job(spark, task11out)

    timeToFile(task3.runV1SeptCsv(), "task31SeptCsvOut with writing to parquet")
    timeToFile(task3.runV1SeptParquet(), "task31SeptParquetOut with writing to parquet")
    timeToFile(task3.runV1NovCsv(), "task31NovCsvOut with writing to parquet")
    timeToFile(task3.runV1NovParquet(), "task31NovParquetOut with writing to parquet")

    timeToFile(task3.runV2SeptCsv(), "task32SeptCsvOut with writing to parquet")
    timeToFile(task3.runV2SeptParquet(), "task32SeptParquetOut with writing to parquet")
    timeToFile(task3.runV2NovCsv(), "task32NovCsvOut with writing to parquet")
    timeToFile(task3.runV2NovParquet(), "task32NovParquetOut with writing to parquet")
/*
    TODO Build Weekly purchases Projection within one quarter

     General requirements
      The requirements that apply to all tasks:
      todo ● Configurable input and output for both tasks
      todo ● Will be a plus: README file in the project documenting the solution.
      todo ● Will be a plus: Integrational tests that cover the main method.
     */
  }

}